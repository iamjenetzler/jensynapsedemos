{
	"name": "LibraryManagement",
	"properties": {
		"folder": {
			"name": "2 - Spark pool"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "9c9df094-0346-4420-82e6-d874a89c31bd"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Library deployment from public repo"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pkg_resources\r\n",
					"\r\n",
					"for d in pkg_resources.working_set:\r\n",
					"    print(d)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import fuzzywuzzy\r\n",
					"print(fuzzywuzzy.__version__)\r\n",
					"print(fuzzywuzzy.__path__)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import numpy\r\n",
					"print(numpy.__version__)\r\n",
					"print(numpy.__path__)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import glob\r\n",
					"\r\n",
					"for f in glob.iglob('/usr/lib/library-manager/**/*.jar', recursive = True):\r\n",
					"    print(f)"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Session level library deployment"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# %%configure -f\r\n",
					"# {\r\n",
					"#     \"conf\":\r\n",
					"#     {\r\n",
					"#         \"spark.jars\": \"abfss://container@storage.dfs.core.windows.net/lib/spark-sql-kafka-0-10_2.12-3.1.1.jar, abfss://container@storage.dfs.core.windows.net/lib/spark-streaming-kafka_2.11-1.6.3.jar\"\r\n",
					"#     }\r\n",
					"# }        "
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# https://mvnrepository.com/artifact/com.microsoft.azure/azure-cosmosdb-spark_2.3.0_2.11/1.3.3\r\n",
					"# <!-- https://mvnrepository.com/artifact/com.microsoft.azure/azure-cosmosdb-spark_2.3.0 -->\r\n",
					"# <dependency>\r\n",
					"#     <groupId>com.microsoft.azure</groupId>\r\n",
					"#     <artifactId>azure-cosmosdb-spark_2.3.0_2.11</artifactId>\r\n",
					"#     <version>1.3.3</version>\r\n",
					"# </dependency>"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%configure -f \r\n",
					"{ \r\n",
					"    \"conf\": \r\n",
					"    {\r\n",
					"        \"spark.jars.packages\": \"com.microsoft.azure:azure-cosmosdb-spark_2.3.0_2.11:1.3.3\"\r\n",
					"    }\r\n",
					"}"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%configure -f \r\n",
					"{\r\n",
					"    \"spark.synapse.library.python.env\": \"name: env\\r\\nchannels:\\r\\n- anaconda\\r\\n- conda-forge\\r\\ndependencies:\\r\\n- pip:\\r\\n  - numpy\\r\\n\"\r\n",
					"}"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Python - Custom Library"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pythoncalc.simplecalc.functions\r\n",
					"help(pythoncalc.simplecalc.functions)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pythoncalc.simplecalc.functions import *\r\n",
					"print(doublenum(10))\r\n",
					"print(squarenum(10))"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Scala - Custom Library"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%configure -f\r\n",
					"{\r\n",
					"    \"conf\":\r\n",
					"    {\r\n",
					"        \"spark.jars\": \"abfss://synapseintellplat@synapseintellplat.dfs.core.windows.net/library/scalapkgexample_2.12-0.1.jar\"\r\n",
					"    }\r\n",
					"}    "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"import scalapkgexample.scalacalc.simplecalc.Functions._\r\n",
					"\r\n",
					"doublenum(10)\r\n",
					"squarenum(10)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"import org.apache.spark.SparkContext\r\n",
					"val sc = SparkContext.getOrCreate()\r\n",
					"val sourceRDD = sc.textFile(\"/data/textdata.txt\")\r\n",
					"sourceRDD.take(num = 10).foreach(println)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"import scalapkgexample.scalacalc.simplecalc.ProcessData._\r\n",
					"processTextData(\"/data/textdata.txt\")"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.conf.set(\"spark.sql.legacy.timeParserPolicy\", \"LEGACY\")"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"import scalapkgexample.scalacalc.simplecalc.DateDimension\r\n",
					"\r\n",
					"val dateDim = new DateDimension().createDataFrame()\r\n",
					"dateDim.write.mode(\"overwrite\").saveAsTable(\"DimDate\")"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"show TABLES"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from default.dimdate limit 100"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import glob\r\n",
					"\r\n",
					"for f in glob.iglob('/mnt/var/hadoop/**/scalapkgexample_2.12-0.1.jar', recursive = True):\r\n",
					"    print(f)"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Temp Area"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# import glob\r\n",
					"\r\n",
					"# for f in glob.iglob('/usr/lib/library-manager/**/*.jar', recursive = True):\r\n",
					"#     print(f)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# %%configure -f\r\n",
					"# {\r\n",
					"#     \"conf\":\r\n",
					"#     {\r\n",
					"#         \"spark.jars\": \"abfss://synapseintellplat@synapseintellplat.dfs.core.windows.net/library/scalapkgexample_2.12-0.1.jar\"\r\n",
					"#     }\r\n",
					"# }    "
				]
			}
		]
	}
}